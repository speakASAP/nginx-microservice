services:
  postgres:
    image: postgres:15
    container_name: db-server-postgres
    restart: always
    environment:
      # Master admin user - used for creating databases for projects
      POSTGRES_USER: ${DB_SERVER_ADMIN_USER:-dbadmin}
      POSTGRES_PASSWORD: ${DB_SERVER_ADMIN_PASSWORD:-dbadmin_secret_change_in_production}
      # Initial database (can be empty or used for management)
      POSTGRES_DB: ${DB_SERVER_INIT_DB:-postgres}
      # PostgreSQL configuration for multi-database setup
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    env_file:
      - .env
    ports:
      # Optional: Expose for direct management (restrict to localhost in production)
      - "127.0.0.1:${DB_SERVER_PORT:-5432}:5432"
    volumes:
      # Centralized PostgreSQL data volume - contains all project databases
      - db_server_pgdata:/var/lib/postgresql/data
      # Init scripts for automatic database creation
      - ./scripts/db-server/init-databases.sh:/docker-entrypoint-initdb.d/01-init-databases.sh:ro
      # Backup directory (mounted for easy access)
      - ./backups/db-server:/backups:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_SERVER_ADMIN_USER:-dbadmin}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - nginx-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7
    container_name: db-server-redis
    restart: always
    command:
      - redis-server
      - --save ""
      - --appendonly ${REDIS_APPENDONLY:-no}
      - --maxmemory ${REDIS_MAXMEMORY:-256mb}
      - --maxmemory-policy ${REDIS_MAXMEMORY_POLICY:-allkeys-lru}
    env_file:
      - .env
    ports:
      # Optional: Expose for direct management (restrict to localhost in production)
      - "127.0.0.1:${REDIS_SERVER_PORT:-6379}:6379"
    volumes:
      # Centralized Redis data volume
      - db_server_redisdata:/data
      # Redis configuration
      - ./scripts/db-server/redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - nginx-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  # Centralized PostgreSQL data - contains ALL project databases
  db_server_pgdata:
    name: db_server_pgdata
  # Centralized Redis data
  db_server_redisdata:
    name: db_server_redisdata

networks:
  nginx-network:
    external: true

