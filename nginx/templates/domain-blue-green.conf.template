# Domain Configuration Template with Blue/Green Deployment
# Variables: DOMAIN_NAME, FRONTEND_CONTAINER_BASE, BACKEND_CONTAINER_BASE, FRONTEND_PORT, BACKEND_PORT
# Supports blue/green deployment with upstream blocks

# Upstream blocks for blue/green deployment
upstream {{FRONTEND_CONTAINER_BASE}} {
    server {{FRONTEND_CONTAINER_BASE}}-blue:{{FRONTEND_PORT}} weight=100;
    server {{FRONTEND_CONTAINER_BASE}}-green:{{FRONTEND_PORT}} weight=0 backup;
}

upstream {{BACKEND_CONTAINER_BASE}} {
    server {{BACKEND_CONTAINER_BASE}}-blue:{{BACKEND_PORT}} weight=100;
    server {{BACKEND_CONTAINER_BASE}}-green:{{BACKEND_PORT}} weight=0 backup;
}

# HTTP Server - Redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name {{DOMAIN_NAME}} www.{{DOMAIN_NAME}};
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Let's Encrypt challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
        try_files $uri =404;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name {{DOMAIN_NAME}} www.{{DOMAIN_NAME}};
    
    # SSL Configuration
    ssl_certificate /etc/nginx/certs/{{DOMAIN_NAME}}/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/{{DOMAIN_NAME}}/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Rate limiting
    limit_req zone=general burst=50 nodelay;
    
    # Frontend routes - using upstream
    location / {
        proxy_pass http://{{FRONTEND_CONTAINER_BASE}};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        
        # Buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # API routes with stricter rate limiting - using upstream
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://{{BACKEND_CONTAINER_BASE}}/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # WebSocket support - using upstream
    location /ws {
        proxy_pass http://{{BACKEND_CONTAINER_BASE}}/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }
    
    # Health check endpoint - using upstream
    location /health {
        proxy_pass http://{{BACKEND_CONTAINER_BASE}}/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
        limit_req zone=api burst=5 nodelay;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to sensitive files
    location ~* \.(env|git|svn|htaccess|htpasswd|ini|log|sh|sql|conf|bak|swp|swo)$ {
        deny all;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

